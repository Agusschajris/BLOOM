// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

// DOWNLOAD PRISMA EXTENSION

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url = env("POSTGRES_PRISMA_URL") // uses connection pooling
  directUrl = env("POSTGRES_URL_NON_POOLING") // uses a direct connection
}

model User {
  id                Int           @id @default(autoincrement())
  email             String        @unique
  username          String        @unique
  name              String
  professor         Boolean
  organization      String?
  projects          Project[]
  classes           Class[]       @relation("UserClasses")
  createdClasses    Class[]       @relation("OwnerClasses")
  datasets          Dataset[]
}

model Project { 
  id                Int           @id @default(autoincrement())
  name              String
  owner             User          @relation(fields: [ownerId], references: [id])
  ownerId           Int
  dataset           Dataset       @relation(fields: [datasetId], references: [id])
  datasetId         Int
}

model Class {
  id                Int           @id @default(autoincrement())
  name              String
  owner             User          @relation("OwnerClasses", fields: [ownerId], references: [id])
  ownerId           Int
  users             User[]        @relation("UserClasses")
  datasets          Dataset[]     @relation("ClassDatasets")
}

model Dataset {
  id                Int           @id @default(autoincrement())
  name              String?
  dataset           String        // URL
  user              User?         @relation(fields: [userId], references: [id])
  userId            Int?
  projects          Project[]
  classes           Class[]       @relation("ClassDatasets")
}
